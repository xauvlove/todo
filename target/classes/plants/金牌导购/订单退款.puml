@startuml
skinparam sequenceArrowThickness 1
skinparam roundcorner 20
skinparam maxmessagesize 500
/'skinparam sequenceParticipant underline'/

actor nsq as nsq

participant "retail-sales" as sales
participant "kdtId white list" as list
participant "salesman white list" as list2

participant "salesman_rank_log" as t1
participant "salesman_achievement_details_log" as t2

nsq -> sales : 1发送订单退款消息

sales -> sales : 1.1 判断订单退款时间是否小于统计截止时间
/'sales -> sales : 1.1加分布式锁
activate sales
return'/

sales -> list2 : 2校验salesmanId是否属于白名单
activate list2
return 3返回

sales -> t2 : 3根据salesmanId和orderNo查询订单
activate t2
note left
    如果查询不到订单，说明订单支付成功消息延迟
    丢弃
end note

note right
    如果查询到订单
    更新 salesman_rank_log
    state = 9 or state = 0 如果部分退款 state = 0 如果全部退款 state = 9
    查询订单详情 使用订单详情 realPay 和 refundAmount
    real_pay = real_pay - refundAmount
    version = version + 1
end note
return 4返回

sales -> t2 : 5聚合 salesman_achievement_details_log 表数据
activate t2
return 6返回

sales -> t1 : 7利用聚合数据更新 salesman_rank_log
note left
    paid_amount = count(real_pay) where rootKdtId = ? and salesmanId = ? and state = 0
end note
activate t1
return 8返回

sales --> nsq : 9返回
@enduml